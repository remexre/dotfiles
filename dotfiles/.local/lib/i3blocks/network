#!/usr/bin/env python

from os import getenv, listdir
from os.path import exists
from subprocess import PIPE, run

# The colors to use.
color_good = "#50FB7C"
color_degraded = "#F0FB8C"
color_bad = "#FC4346"

def devices():
	return listdir("/sys/class/net")

def first_ethernet():
	ds = list(filter(lambda d: d[0] == "e", devices()))
	if len(ds) == 0:
		return None
	return ds[0]

def first_wifi():
	ds = list(filter(lambda d: d[0] == "w", devices()))
	if len(ds) == 0:
		return None
	return ds[0]

def read(path):
	with open(path) as f:
		return f.read()

iface = getenv("BLOCK_INSTANCE")

if iface == "wifi":
	iface = first_wifi()
elif iface == "ethernet":
	iface = first_ethernet()

if iface is None:
	exit()

path = "/sys/class/net/" + iface
if not exists(path):
	exit()

wireless = exists(path + "/wireless")

if read(path + "/operstate") == "down":
	quality = 0
elif not wireless:
	quality = 100
else:
	quality = "TODO"

ip = str(run("ifconfig {} | grep inet | awk '{{print $2}}' | head -n 1".format(iface), shell=True, stdout=PIPE, universal_newlines=True).stdout)[:-1]

quality = int(run("grep {} /proc/net/wireless | awk '{{print int($4 * -1)}}'".format(iface), shell=True, stdout=PIPE, universal_newlines=True).stdout)

if wireless:
	network = run(["iwgetid", "-r", iface], stdout=PIPE, universal_newlines=True).stdout[:-1]
	print("({}% @ {}) {}".format(quality, network, ip))
	print("({}% @ {}) {}".format(quality, network, ip))
else:
	print(ip)
	print(ip)


if quality > 50:
	print(color_good)
elif quality > 25:
	print(color_degraded)
else:
	print(color_bad)
